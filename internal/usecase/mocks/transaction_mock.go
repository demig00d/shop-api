// Code generated by MockGen. DO NOT EDIT.
// Source: shop/internal/usecase (interfaces: SendCoinUseCaseInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSendCoinUseCaseInterface is a mock of SendCoinUseCaseInterface interface.
type MockSendCoinUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSendCoinUseCaseInterfaceMockRecorder
}

// MockSendCoinUseCaseInterfaceMockRecorder is the mock recorder for MockSendCoinUseCaseInterface.
type MockSendCoinUseCaseInterfaceMockRecorder struct {
	mock *MockSendCoinUseCaseInterface
}

// NewMockSendCoinUseCaseInterface creates a new mock instance.
func NewMockSendCoinUseCaseInterface(ctrl *gomock.Controller) *MockSendCoinUseCaseInterface {
	mock := &MockSendCoinUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockSendCoinUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendCoinUseCaseInterface) EXPECT() *MockSendCoinUseCaseInterfaceMockRecorder {
	return m.recorder
}

// SendCoin mocks base method.
func (m *MockSendCoinUseCaseInterface) SendCoin(arg0 context.Context, arg1, arg2 string, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCoin", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendCoin indicates an expected call of SendCoin.
func (mr *MockSendCoinUseCaseInterfaceMockRecorder) SendCoin(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCoin", reflect.TypeOf((*MockSendCoinUseCaseInterface)(nil).SendCoin), arg0, arg1, arg2, arg3)
}
